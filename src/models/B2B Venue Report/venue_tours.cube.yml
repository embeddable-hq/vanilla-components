cubes:
- name: venue_tours
  data_source: default
  #sql_table: smartify-cc94e.report_venue.venue_tourtrack_table
  sql: >
    SELECT a.*, b.language_name, c.user_age, c.user_gender
    FROM `smartify-cc94e.report_venue.venue_tourtrack_table` as a
    left join `smartify-cc94e.smartify_lookup_tables.device_language_region` as b on a.device_language = b.device_language
    left join `smartify-cc94e.report_venue.venue_overall_table` as c on a.join_key = c.join_key
    WHERE a.organisation_sid = '{COMPILE_CONTEXT.securityContext.organisation_id}'

  dimensions:
    - name: date
      type: time
      sql: timestamp(partition_date)
    
    - name: event_name
      type: string
      sql: event_name
    
    - name: country
      type: string
      sql: geo_country
    
    - name: city
      type: string
      sql: geo_city
    
    - name: device_language
      type: string
      sql: language_name
    
    - name: user_age
      type: string
      sql: user_age
    
    - name: user_age_range
      type: string
      sql: case when cast({user_age} as INT64) < 18 then "- 18" when cast({user_age} as INT64) >= 18 and cast({user_age} as INT64) < 25 then "18 - 24" when cast({user_age} as INT64) >= 25 and cast({user_age} as INT64) < 35 then "25 - 34" when cast({user_age} as INT64) >= 35 and cast({user_age} as INT64) < 45 then "35 - 44" when cast({user_age} as INT64) >= 45 and cast({user_age} as INT64) < 55 then "45 - 54" when cast({user_age} as INT64) >= 55 and cast({user_age} as INT64) < 65 then "55 - 64" when cast({user_age} as INT64) >= 65 and cast({user_age} as INT64) < 71 then "65 - 70" when cast({user_age} as INT64) >= 71 then "71 +" end
    
    - name: user_gender
      type: string
      sql: user_gender
    
    - name: user_gender_fix
      type: string
      sql: case when {user_gender} IN ( 'Male', 'Männlich', 'Mann', 'Homme', 'Hombre', '男性', 'Man', 'Mand', 'Masculino', 'זכר', 'MALE' ) then 'Male' when {user_gender} IN ( 'Female', 'Woman', 'Femme', 'Mujer', 'Vrouw', 'Weiblich', 'Frau', 'Feminino', '女性', 'Donna', 'Kvinde' ) then 'Female' when {user_gender} IN ('Unspecified', 'Non spécifié', 'Sin especificar') then 'Unspecified' when {user_gender} IN ('Other', 'Autre') then 'Other' else null end
    
    - name: stream
      type: string
      sql: stream_id
    
    - name: venue_id
      type: string
      sql: IFNULL(venue_sid,organisation_sid)
    
    - name: organisation_id
      type: string
      sql: organisation_sid
    
    - name: user_location_type
      type: string
      sql: case when venue_sid = nearby_venue_id then "Onsite User" when user_location_access = "false" then "Unknown" else "Offsite User" end
    
    - name: platform_device
      type: string
      sql: case when platform = "IOS" then "iOS" when platform = "ANDROID" then "Android" when (platform = "WEB" and device_category = "desktop") then "Desktop" else "Webapp" end
    
    - name: tour_name
      type: string
      sql: tour_name
    
    - name: tour_sid
      type: string
      sql: tour_sid
    
    - name: track_name
      type: string
      sql: track_name
    
    - name: track_sid
      type: string
      sql: track_sid
    
    - name: track_audio_language
      type: string
      sql: track_audio_language
    
    - name: user_connectivity
      type: string
      sql: case when connectivity in ("Internet Highspeed","Internet Corporate") then "Wi-Fi" else connectivity end
    
  measures:
    - name: total_events
      type: count
      title: Total Events
    
    - name: users
      sql: user_pseudo_id
      type: count_distinct
      title: Total Users
    
    - name: onsite_users
      title: Onsite Users
      type: count_distinct
      sql: case when venue_sid = nearby_venue_id then user_pseudo_id else null end
    
    - name: registered_users
      title: Registered Users
      type: count_distinct
      sql: user_id
    
    - name: tour_view
      title: Tour View
      type: sum
      sql: tour_view
    
    - name: track_play
      title: Track Play
      type: sum
      sql: track_play      
    
    - name: track_complete
      title: Track Complete
      type: sum
      sql: track_complete
    
    - name: tour_view_users
      title: Tour View Users
      type: count_distinct
      sql: case when tour_view > 0 then user_pseudo_id else null end
    
    - name: track_play_users
      title: Track Play Users
      type: count_distinct
      sql: case when track_play > 0 then user_pseudo_id else null end
    
    - name: track_complete_users
      title: Track Complete Users
      type: count_distinct
      sql: case when track_complete > 0 then user_pseudo_id else null end
    
    - name: track_completion_rate
      title: Track Completion Rate
      type: number
      sql: CASE WHEN {track_play} = 0 THEN 0 ELSE ROUND(({track_complete} / NULLIF({track_play}, 0) * 100), 2) END
      meta:
        suffix: " %"