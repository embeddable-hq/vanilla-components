cubes:
- name: venue_ecommerce
  #sql_table: smartify-cc94e.report_venue.venue_ecomm_table
  sql: >
    SELECT *
    FROM `smartify-cc94e.report_venue.venue_ecomm_table`
    WHERE (organisation_sid = '{COMPILE_CONTEXT.securityContext.organisation_id}')
    

  dimensions:
    - name: date
      type: time
      sql: timestamp(partition_date)
    
    - name: event_name
      type: string
      sql: event_name
    
    - name: country
      type: string
      sql: geo_country
    
    - name: city
      type: string
      sql: geo_city
    
    - name: stream
      type: string
      sql: stream_id
    
    - name: device_language
      type: string
      sql: device_language
    
    - name: venue_id
      type: string
      sql: venue_sid
    
    - name: organisation_id
      type: string
      sql: organisation_sid
    
    - name: user_location_type
      type: string
      sql: case when venue_sid = nearby_venue_id then "Onsite User" when user_location_access = "false" then "Unknown" else "Offsite User" end
    
    - name: platform_device
      type: string
      sql: case when platform = "IOS" then "iOS" when platform = "ANDROID" then "Android" when (platform = "WEB" and device_category = "desktop") then "Desktop" else "Webapp" end
    
    - name: host_join
      type: string
      sql: host_join

    - name: item_name
      type: string
      sql: item_name

    - name: item_category
      type: string
      sql: item_category

    - name: item_brand
      type: string
      sql: item_brand

    - name: ecomm_event
      type: string
      sql: case when event_name = "view_item" then "Product Views" when event_name = "add_to_cart" then "Add to Cart" when event_name = "begin_checkout" then "Begin Checkout" when event_name = "purchase" then "Purchases" end

 
  measures:
    - name: total_events
      type: count
      title: "Total Events"

    - name: users
      sql: user_pseudo_id
      type: count_distinct
      title: "Total Users"

    - name: onsite_users
      type: count_distinct
      sql: case when venue_sid = nearby_venue_id then user_pseudo_id else null end

    - name: registered_users
      type: count_distinct
      sql: user_id

    - name: events_per_user
      title: "Events per User"
      type: number
      sql: "ROUND({total_events} / {users}, 2)"

    - name: purchase
      title: "Purchases"
      type: sum
      sql: case when event_name = "purchase" then 1 else 0 end

    - name: begin_checkout
      title: "Begin Checkout"
      type: sum
      sql: case when event_name = "begin_checkout" then 1 else 0 end

    - name: add_to_cart
      title: "Add to Cart"
      type: sum
      sql: case when event_name = "add_to_cart" then 1 else 0 end

    - name: item_view
      title: "Product View"
      type: sum
      sql: case when event_name = "view_item" then 1 else 0 end

    - name: product_to_cart
      title: "Add to Cart %"
      type: number
      sql: CASE WHEN {item_view} = 0 THEN 0 ELSE ROUND(({add_to_cart} / NULLIF({item_view}, 0) * 100), 2) END
      meta:
        suffix: " %"

    - name: cart_to_checkout
      title: "Checkout %"
      type: number
      sql: CASE WHEN {add_to_cart} = 0 THEN 0 ELSE ROUND(({begin_checkout} / NULLIF({add_to_cart}, 0) * 100), 2) END
      meta:
        suffix: " %"

    - name: checkout_to_purchase
      title: "Purchase %"
      type: number
      sql: CASE WHEN {begin_checkout} = 0 THEN 0 ELSE ROUND(({purchase} / NULLIF({begin_checkout}, 0) * 100), 2) END
      meta:
        suffix: " %"

    - name: ecommerce_conv_rate
      title: "Ecomm Conv Rate"
      type: number
      sql: CASE WHEN {item_view} = 0 THEN 0 ELSE ROUND(({purchase} / NULLIF({item_view}, 0) * 100), 2) END
      meta:
        suffix: " %"
      